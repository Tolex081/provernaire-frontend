{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HELLO\\\\Desktop\\\\provernaire-game\\\\frontend\\\\src\\\\pages\\\\LeaderboardPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/LeaderboardPage.jsx\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport './LeaderboardPage.css'; // Import the CSS for this page\n\n/**\r\n * LeaderboardPage Component\r\n * Displays global and team-specific player rankings and statistics.\r\n * Fetches data from a backend API and provides filtering and sorting options.\r\n *\r\n * @param {Array<Object>} leaderboardData - Optional initial or fallback leaderboard data.\r\n * @param {function} onBackToGame - Callback to navigate back to the game (e.g., PreviewPage).\r\n * @param {Object} currentUser - The current logged-in user's profile data { id, username, pfpUrl, team: { name, color } }.\r\n * @param {boolean} isVisible - Prop to indicate if the leaderboard is currently visible, used for optimizing data fetching.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderboardPage = ({\n  leaderboardData = [],\n  onBackToGame,\n  currentUser,\n  // Renamed from userProfile to match App.jsx prop\n  isVisible = true\n}) => {\n  _s();\n  var _currentUserData$curr, _currentUserData$curr2, _filteredAndSortedDat, _filteredAndSortedDat2, _filteredAndSortedDat3, _filteredAndSortedDat4, _filteredAndSortedDat5, _filteredAndSortedDat6;\n  const [sortedData, setSortedData] = useState([]);\n  const [filterBy, setFilterBy] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [hasInitiallyLoaded, setHasInitiallyLoaded] = useState(false);\n\n  // Use refs to avoid dependency issues in useEffects related to intervals and component mount status\n  const intervalRef = useRef(null);\n  const mountedRef = useRef(true);\n  const initialFetchDone = useRef(false);\n\n  // Memoize static values to prevent unnecessary re-renders\n  const colors = useMemo(() => ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'], []);\n\n  // Function to get a valid image URL for player profiles\n  // Falls back to ui-avatars.com if PFP is missing or invalid\n  const getValidImageUrl = useCallback((pfpUrl, username) => {\n    // Check if pfpUrl is valid (not null, not a blob, not default placeholder)\n    if (!pfpUrl || pfpUrl.startsWith('blob:') || pfpUrl.includes('placehold.co')) {\n      const colorIndex = username ? username.charCodeAt(0) % colors.length : 0;\n      return `https://ui-avatars.com/api/?name=${encodeURIComponent(username || 'U')}&background=${colors[colorIndex].slice(1)}&color=fff&size=50`;\n    }\n    return pfpUrl;\n  }, [colors]);\n\n  // Process and deduplicate leaderboard data\n  // Sorts by score (desc) then timestamp (desc) to handle ties, and removes duplicates by username\n  const processLeaderboardData = useCallback(data => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n    const uniqueDataMap = new Map(); // Map to store unique users by username, keeping the highest score/latest entry\n\n    // Sort data first to ensure the highest score/latest entry for a user is processed last (and thus kept)\n    const sorted = [...data].sort((a, b) => {\n      // Primary sort: score descending\n      if (b.score !== a.score) return b.score - a.score;\n      // Secondary sort: timestamp descending (more recent entry wins ties)\n      return new Date(b.timestamp) - new Date(a.timestamp);\n    });\n\n    // Deduplicate: Iterate through sorted data and add to map.\n    // Because it's sorted, the last entry for a username will be the best/most recent.\n    sorted.forEach(player => {\n      // Ensure player.username exists to avoid issues with undefined keys\n      if (player.username) {\n        uniqueDataMap.set(player.username, player);\n      }\n    });\n    return Array.from(uniqueDataMap.values());\n  }, []);\n\n  // Function to fetch leaderboard data from the backend API\n  const fetchLeaderboard = useCallback(async (isBackgroundRefresh = false) => {\n    // Only proceed if the component is still mounted\n    if (!mountedRef.current) return;\n    try {\n      if (!isBackgroundRefresh && !hasInitiallyLoaded) {\n        setIsLoading(true); // Show full loading spinner on initial load\n      } else if (isBackgroundRefresh) {\n        setIsRefreshing(true); // Show refreshing indicator for background updates\n      }\n      setError(null); // Clear any previous errors\n\n      // Define your backend API endpoint for leaderboard data\n      // Use environment variable for API base URL (e.g., REACT_APP_API_BASE_URL)\n      // For Canvas environment, you might need to adjust this to a mock API or a specific endpoint\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\n      const endpoint = `${API_BASE_URL}/api/scores/leaderboard`; // Assuming this endpoint exists on your backend\n\n      console.log(`Fetching leaderboard from: ${endpoint}`);\n      const res = await fetch(endpoint);\n      if (!res.ok) {\n        // If response is not OK (e.g., 404, 500), throw an error\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      console.log('📊 Leaderboard data received:', data);\n\n      // Only update state if component is still mounted\n      if (!mountedRef.current) return;\n      const processedData = processLeaderboardData(data);\n      setSortedData(processedData);\n      setLastUpdated(new Date()); // Record the time of the last successful update\n\n      if (!hasInitiallyLoaded) {\n        setHasInitiallyLoaded(true); // Mark that initial data has been loaded\n        initialFetchDone.current = true; // Mark initial fetch as complete\n      }\n    } catch (err) {\n      console.error('❌ Error fetching leaderboard:', err);\n      // Only update state if component is still mounted\n      if (!mountedRef.current) return;\n      setError(err.message); // Set the error message\n\n      // If there's an error on initial load and fallback data is provided, use it\n      if (!hasInitiallyLoaded && leaderboardData && leaderboardData.length > 0) {\n        console.log('📋 Using fallback data from props:', leaderboardData);\n        const processedData = processLeaderboardData(leaderboardData);\n        setSortedData(processedData);\n        setLastUpdated(new Date());\n        setHasInitiallyLoaded(true);\n        initialFetchDone.current = true;\n      }\n    } finally {\n      // Always stop loading/refreshing indicators\n      if (mountedRef.current) {\n        setIsLoading(false);\n        setIsRefreshing(false);\n      }\n    }\n  }, [processLeaderboardData, leaderboardData, hasInitiallyLoaded]); // Dependencies for useCallback\n\n  // Effect for initial data fetch and setting up auto-refresh\n  useEffect(() => {\n    // If the leaderboard is not visible, don't fetch or refresh in the background\n    if (!isVisible) {\n      // Clear any existing interval if component becomes invisible\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      return;\n    }\n\n    // Clear any existing interval before setting a new one\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n\n    // Only do initial fetch if we haven't loaded before or if data is empty\n    // This prevents re-fetching immediately if component re-renders but is already loaded\n    if (!initialFetchDone.current || sortedData.length === 0) {\n      fetchLeaderboard(false); // Perform initial fetch (not background refresh)\n    }\n\n    // Setup auto-refresh every 60 seconds (60000 ms)\n    intervalRef.current = setInterval(() => {\n      // Only refresh if component is mounted and currently visible\n      if (mountedRef.current && isVisible) {\n        fetchLeaderboard(true); // Perform a background refresh\n      }\n    }, 60000);\n\n    // Cleanup function: clear interval when component unmounts or isVisible changes to false\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isVisible, fetchLeaderboard, sortedData.length]); // Dependencies for this useEffect\n\n  // Effect to handle cleanup on component unmount\n  useEffect(() => {\n    mountedRef.current = true; // Set to true on mount\n    return () => {\n      mountedRef.current = false; // Set to false on unmount\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  // Memoize filtered and sorted data to prevent unnecessary recalculations on re-renders\n  const filteredAndSortedData = useMemo(() => {\n    let filtered = [...sortedData];\n    switch (filterBy) {\n      case 'team':\n        // Filter by the current user's team if a team is selected\n        filtered = filtered.filter(entry => (currentUser === null || currentUser === void 0 ? void 0 : currentUser.team) && entry.team && entry.team.name === currentUser.team.name);\n        break;\n      case 'completed':\n        // Filter for players who completed the game (reached max score)\n        // Assuming 'completed' means reaching the final prize tier (e.g., 1,000,000 $PROVE)\n        filtered = filtered.filter(entry => entry.completed && entry.score >= 1000000);\n        break;\n      default:\n        // 'all' filter, no additional filtering needed\n        break;\n    }\n\n    // Final sort by score descending, then by question number (for ties)\n    filtered.sort((a, b) => {\n      if (b.score !== a.score) {\n        return b.score - a.score;\n      }\n      // If scores are equal, sort by questionNumber (higher question number means they progressed further)\n      return (b.questionNumber || 0) - (a.questionNumber || 0);\n    });\n    return filtered;\n  }, [sortedData, filterBy, currentUser]); // Dependencies for this useMemo\n\n  // Memoize current user's data and rank within the filtered list\n  const currentUserData = useMemo(() => {\n    const currentUserEntry = filteredAndSortedData.find(entry => entry.username === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username));\n    const currentUserRank = currentUserEntry ? filteredAndSortedData.findIndex(entry => entry.username === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username)) + 1 : null;\n    return {\n      currentUserEntry,\n      currentUserRank\n    };\n  }, [filteredAndSortedData, currentUser === null || currentUser === void 0 ? void 0 : currentUser.username]);\n\n  // Memoize team statistics to prevent recalculation\n  const teamStats = useMemo(() => {\n    const stats = {};\n    sortedData.forEach(entry => {\n      if (entry.team && entry.team.name) {\n        // Ensure team and team name exist\n        const teamName = entry.team.name;\n        if (!stats[teamName]) {\n          stats[teamName] = {\n            name: teamName,\n            color: entry.team.color,\n            totalScore: 0,\n            playerCount: 0,\n            avgScore: 0,\n            topScore: 0\n          };\n        }\n        stats[teamName].totalScore += entry.score || 0;\n        stats[teamName].playerCount += 1;\n        stats[teamName].topScore = Math.max(stats[teamName].topScore, entry.score || 0);\n      }\n    });\n\n    // Calculate average score and sort teams by total score\n    Object.values(stats).forEach(team => {\n      team.avgScore = team.playerCount > 0 ? Math.round(team.totalScore / team.playerCount) : 0;\n    });\n    return Object.values(stats).sort((a, b) => b.totalScore - a.totalScore);\n  }, [sortedData]);\n\n  // Helper function to get styling for different ranks (Top 3, Others)\n  const getRankStyling = useCallback(index => {\n    switch (index) {\n      case 0:\n        return {\n          icon: '👑',\n          class: 'rank-first',\n          gradient: 'linear-gradient(135deg, #FFD700, #FFA500)',\n          // Gold\n          glow: '#FFD700'\n        };\n      case 1:\n        return {\n          icon: '🥈',\n          class: 'rank-second',\n          gradient: 'linear-gradient(135deg, #C0C0C0, #A0A0A0)',\n          // Silver\n          glow: '#C0C0C0'\n        };\n      case 2:\n        return {\n          icon: '🥉',\n          class: 'rank-third',\n          gradient: 'linear-gradient(135deg, #CD7F32, #B87333)',\n          // Bronze\n          glow: '#CD7F32'\n        };\n      default:\n        return {\n          icon: `#${index + 1}`,\n          class: 'rank-other',\n          gradient: 'linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.01))',\n          // Subtle gradient for others\n          glow: 'rgba(97, 195, 255, 0.2)' // Blueish glow\n        };\n    }\n  }, []);\n\n  // Helper function to get status badge for player entries\n  const getStatusBadge = useCallback(entry => {\n    // Check for Provernaire status first (completed game with max score)\n    if (entry.completed && entry.score >= 1000000) {\n      return {\n        text: 'PROVERNAIRE',\n        class: 'status-provernaire',\n        icon: '💎'\n      };\n    } else if (entry.failed) {\n      return {\n        text: 'ELIMINATED',\n        class: 'status-failed',\n        icon: '💥'\n      };\n    } else if (entry.walkedAway) {\n      return {\n        text: 'WALKED AWAY',\n        class: 'status-walked',\n        icon: '🚶'\n      };\n    } else if (entry.timeUp) {\n      return {\n        text: 'TIME UP',\n        class: 'status-timeout',\n        icon: '⏰'\n      };\n    } else if (entry.gameStatus === 'in_progress') {\n      return {\n        text: 'IN PROGRESS',\n        class: 'status-progress',\n        icon: '🎮'\n      };\n    } else {\n      // Default or unknown status\n      return {\n        text: 'PLAYED',\n        class: 'status-played',\n        icon: '✅'\n      };\n    }\n  }, []);\n\n  // Memoize last updated text for display\n  const lastUpdatedText = useMemo(() => {\n    if (!lastUpdated) return '';\n    const now = new Date();\n    const diffInSeconds = Math.floor((now - lastUpdated) / 1000);\n    if (diffInSeconds < 60) {\n      return `Updated ${diffInSeconds} seconds ago`;\n    } else {\n      const diffInMinutes = Math.floor(diffInSeconds / 60);\n      return `Updated ${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;\n    }\n  }, [lastUpdated]);\n\n  // Loading state - ONLY show on very first load if no data is present\n  if (isLoading && !hasInitiallyLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-animation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-shapes\",\n          children: [...Array(20)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `shape shape-${i % 4}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"\\uD83C\\uDFAE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-text\",\n          children: \"Loading leaderboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state - only show if we have an error AND no data AND haven't loaded successfully before\n  if (error && sortedData.length === 0 && !hasInitiallyLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-animation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-shapes\",\n          children: [...Array(15)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `shape shape-${i % 3}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Failed to load leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchLeaderboard(false),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), onBackToGame && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onBackToGame,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Back to Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-shapes\",\n        children: [...Array(20)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `shape shape-${i % 4}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBackToGame // Use onBackToGame directly\n        ,\n        type: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"back-icon\",\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"back-text\",\n          children: \"Back to Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"leaderboard-title\",\n          children: \"\\uD83C\\uDFC6 LEADERBOARD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"leaderboard-subtitle\",\n          children: \"Who Wants to Be a Provernaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), currentUser && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"current-user\",\n          children: [\"Playing as: @\", currentUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"refresh-info\",\n          children: [isRefreshing && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"refresh-indicator\",\n            children: \"\\uD83D\\uDD04 Updating...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), lastUpdated && !isRefreshing && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"last-updated\",\n            children: lastUpdatedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sortedData.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sortedData.filter(e => e.completed && e.score >= 1000000).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"PROVERNAIRES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), currentUserData.currentUserEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-performance-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performance-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-rank\",\n          children: [\"Rank #\", currentUserData.currentUserRank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performance-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getValidImageUrl(currentUserData.currentUserEntry.pfpUrl, currentUserData.currentUserEntry.username),\n          alt: \"Your profile\",\n          className: \"performance-pfp\",\n          onError: e => {\n            e.target.src = getValidImageUrl(null, currentUserData.currentUserEntry.username);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"performance-score\",\n            children: [(currentUserData.currentUserEntry.score || 0).toLocaleString(), \" $PROVE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"performance-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"performance-team\",\n              style: {\n                color: (_currentUserData$curr = currentUserData.currentUserEntry.team) === null || _currentUserData$curr === void 0 ? void 0 : _currentUserData$curr.color\n              },\n              children: ((_currentUserData$curr2 = currentUserData.currentUserEntry.team) === null || _currentUserData$curr2 === void 0 ? void 0 : _currentUserData$curr2.name) || 'No Team'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-status\",\n          children: (() => {\n            const status = getStatusBadge(currentUserData.currentUserEntry);\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${status.class}`,\n              children: [status.icon, \" \", status.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filterBy === 'all' ? 'active' : ''}`,\n        onClick: () => setFilterBy('all'),\n        type: \"button\",\n        children: [\"\\uD83C\\uDF0D All Players (\", sortedData.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filterBy === 'team' ? 'active' : ''}`,\n        onClick: () => setFilterBy('team'),\n        type: \"button\",\n        disabled: !(currentUser !== null && currentUser !== void 0 && currentUser.team),\n        children: [\"\\uD83D\\uDC65 My Team (\", sortedData.filter(p => p.team && (currentUser === null || currentUser === void 0 ? void 0 : currentUser.team) && p.team.name === currentUser.team.name).length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filterBy === 'completed' ? 'active' : ''}`,\n        onClick: () => setFilterBy('completed'),\n        type: \"button\",\n        children: [\"\\uD83D\\uDC8E PROVERNAIRES (\", sortedData.filter(p => p.completed && p.score >= 1000000).length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-content\",\n      children: [filteredAndSortedData.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"podium-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\uD83E\\uDD47 Hall of Fame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"podium\",\n          children: [filteredAndSortedData[1] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"podium-position second\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-player\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getValidImageUrl(filteredAndSortedData[1].pfpUrl, filteredAndSortedData[1].username),\n                alt: filteredAndSortedData[1].username,\n                className: \"podium-pfp\",\n                onError: e => {\n                  e.target.src = getValidImageUrl(null, filteredAndSortedData[1].username);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"podium-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-username\",\n                  children: [\"@\", filteredAndSortedData[1].username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-score\",\n                  children: [(filteredAndSortedData[1].score || 0).toLocaleString(), \" $PROVE\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-team\",\n                  style: {\n                    backgroundColor: (_filteredAndSortedDat = filteredAndSortedData[1].team) === null || _filteredAndSortedDat === void 0 ? void 0 : _filteredAndSortedDat.color\n                  },\n                  children: ((_filteredAndSortedDat2 = filteredAndSortedData[1].team) === null || _filteredAndSortedDat2 === void 0 ? void 0 : _filteredAndSortedDat2.name) || 'No Team'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-rank\",\n              children: \"\\uD83E\\uDD48\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-height second-height\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"podium-position first\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crown-animation\",\n              children: \"\\uD83D\\uDC51\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-player\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getValidImageUrl(filteredAndSortedData[0].pfpUrl, filteredAndSortedData[0].username),\n                alt: filteredAndSortedData[0].username,\n                className: \"podium-pfp\",\n                onError: e => {\n                  e.target.src = getValidImageUrl(null, filteredAndSortedData[0].username);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"podium-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-username\",\n                  children: [\"@\", filteredAndSortedData[0].username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-score\",\n                  children: [(filteredAndSortedData[0].score || 0).toLocaleString(), \" $PROVE\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-team\",\n                  style: {\n                    backgroundColor: (_filteredAndSortedDat3 = filteredAndSortedData[0].team) === null || _filteredAndSortedDat3 === void 0 ? void 0 : _filteredAndSortedDat3.color\n                  },\n                  children: ((_filteredAndSortedDat4 = filteredAndSortedData[0].team) === null || _filteredAndSortedDat4 === void 0 ? void 0 : _filteredAndSortedDat4.name) || 'No Team'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-rank\",\n              children: \"\\uD83E\\uDD47\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-height first-height\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), filteredAndSortedData[2] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"podium-position third\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-player\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getValidImageUrl(filteredAndSortedData[2].pfpUrl, filteredAndSortedData[2].username),\n                alt: filteredAndSortedData[2].username,\n                className: \"podium-pfp\",\n                onError: e => {\n                  e.target.src = getValidImageUrl(null, filteredAndSortedData[2].username);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"podium-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-username\",\n                  children: [\"@\", filteredAndSortedData[2].username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-score\",\n                  children: [(filteredAndSortedData[2].score || 0).toLocaleString(), \" $PROVE\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"podium-team\",\n                  style: {\n                    backgroundColor: (_filteredAndSortedDat5 = filteredAndSortedData[2].team) === null || _filteredAndSortedDat5 === void 0 ? void 0 : _filteredAndSortedDat5.color\n                  },\n                  children: ((_filteredAndSortedDat6 = filteredAndSortedData[2].team) === null || _filteredAndSortedDat6 === void 0 ? void 0 : _filteredAndSortedDat6.name) || 'No Team'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-rank\",\n              children: \"\\uD83E\\uDD49\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"podium-height third-height\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rankings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCCA Full Rankings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rankings-list\",\n          children: filteredAndSortedData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83C\\uDFAE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-title\",\n              children: sortedData.length === 0 ? \"No players have joined yet!\" : \"No players in this category!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-subtitle\",\n              children: sortedData.length === 0 ? \"Be the first to play and claim the top spot\" : \"Switch to 'All Players' to see everyone.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-hint\",\n              children: [\"Connection error: \", error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this) : filteredAndSortedData.map((entry, index) => {\n            var _entry$team, _entry$team2;\n            const rankStyle = getRankStyling(index);\n            const status = getStatusBadge(entry);\n            const isCurrentUser = entry.username === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              // Unique key\n              className: `ranking-item ${rankStyle.class} ${isCurrentUser ? 'current-user' : ''}`,\n              style: {\n                // Apply gradient background only for top 3, others use default item background\n                background: index < 3 ? rankStyle.gradient : 'rgba(255, 255, 255, 0.05)',\n                boxShadow: `0 4px 20px ${rankStyle.glow}33`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranking-rank\",\n                children: rankStyle.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getValidImageUrl(entry.pfpUrl, entry.username) // Use pfpUrl from entry\n                ,\n                alt: entry.username,\n                className: \"ranking-pfp\",\n                onError: e => {\n                  e.target.src = getValidImageUrl(null, entry.username);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranking-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ranking-username\",\n                  children: [\"@\", entry.username, isCurrentUser && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"you-badge\",\n                    children: \"YOU\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ranking-details\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ranking-team\",\n                    style: {\n                      color: (_entry$team = entry.team) === null || _entry$team === void 0 ? void 0 : _entry$team.color\n                    },\n                    children: ((_entry$team2 = entry.team) === null || _entry$team2 === void 0 ? void 0 : _entry$team2.name) || 'No Team'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranking-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-amount\",\n                  children: (entry.score || 0).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-currency\",\n                  children: \"$PROVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranking-status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${status.class}`,\n                  children: [status.icon, \" \", status.text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 21\n              }, this)]\n            }, `${entry._id || entry.username}-${entry.score}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), teamStats.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Team Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-stats-grid\",\n          children: teamStats.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-stat-card\",\n            style: {\n              borderColor: team.color,\n              boxShadow: `0 4px 20px ${team.color}33`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"team-stat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-stat-color\",\n                style: {\n                  backgroundColor: team.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"team-stat-name\",\n                children: team.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-stat-rank\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"team-stat-metrics\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: team.totalScore.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Total Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: team.avgScore.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Avg Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: team.playerCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Players\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: team.topScore.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Best Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 19\n            }, this)]\n          }, team.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: sortedData.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Total Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: sortedData.filter(p => p.completed && p.score >= 1000000).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"PROVERNAIRES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-number\",\n          children: sortedData.length > 0 ? Math.max(...sortedData.map(p => p.score || 0)).toLocaleString() : '0'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Highest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(LeaderboardPage, \"XnceO6tx0MINZ2Yum9NyJYwq4lQ=\");\n_c = LeaderboardPage;\nexport default LeaderboardPage;\nvar _c;\n$RefreshReg$(_c, \"LeaderboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","jsxDEV","_jsxDEV","LeaderboardPage","leaderboardData","onBackToGame","currentUser","isVisible","_s","_currentUserData$curr","_currentUserData$curr2","_filteredAndSortedDat","_filteredAndSortedDat2","_filteredAndSortedDat3","_filteredAndSortedDat4","_filteredAndSortedDat5","_filteredAndSortedDat6","sortedData","setSortedData","filterBy","setFilterBy","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","lastUpdated","setLastUpdated","hasInitiallyLoaded","setHasInitiallyLoaded","intervalRef","mountedRef","initialFetchDone","colors","getValidImageUrl","pfpUrl","username","startsWith","includes","colorIndex","charCodeAt","length","encodeURIComponent","slice","processLeaderboardData","data","Array","isArray","uniqueDataMap","Map","sorted","sort","a","b","score","Date","timestamp","forEach","player","set","from","values","fetchLeaderboard","isBackgroundRefresh","current","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","endpoint","console","log","res","fetch","ok","Error","status","json","processedData","err","message","clearInterval","setInterval","filteredAndSortedData","filtered","filter","entry","team","name","completed","questionNumber","currentUserData","currentUserEntry","find","currentUserRank","findIndex","teamStats","stats","teamName","color","totalScore","playerCount","avgScore","topScore","Math","max","Object","round","getRankStyling","index","icon","class","gradient","glow","getStatusBadge","text","failed","walkedAway","timeUp","gameStatus","lastUpdatedText","now","diffInSeconds","floor","diffInMinutes","className","children","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","type","e","src","alt","onError","target","toLocaleString","disabled","p","backgroundColor","_entry$team","_entry$team2","rankStyle","isCurrentUser","background","boxShadow","_id","borderColor","_c","$RefreshReg$"],"sources":["C:/Users/HELLO/Desktop/provernaire-game/frontend/src/pages/LeaderboardPage.jsx"],"sourcesContent":["// frontend/src/pages/LeaderboardPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport './LeaderboardPage.css'; // Import the CSS for this page\r\n\r\n/**\r\n * LeaderboardPage Component\r\n * Displays global and team-specific player rankings and statistics.\r\n * Fetches data from a backend API and provides filtering and sorting options.\r\n *\r\n * @param {Array<Object>} leaderboardData - Optional initial or fallback leaderboard data.\r\n * @param {function} onBackToGame - Callback to navigate back to the game (e.g., PreviewPage).\r\n * @param {Object} currentUser - The current logged-in user's profile data { id, username, pfpUrl, team: { name, color } }.\r\n * @param {boolean} isVisible - Prop to indicate if the leaderboard is currently visible, used for optimizing data fetching.\r\n */\r\nconst LeaderboardPage = ({\r\n  leaderboardData = [],\r\n  onBackToGame,\r\n  currentUser, // Renamed from userProfile to match App.jsx prop\r\n  isVisible = true,\r\n}) => {\r\n  const [sortedData, setSortedData] = useState([]);\r\n  const [filterBy, setFilterBy] = useState('all');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [hasInitiallyLoaded, setHasInitiallyLoaded] = useState(false);\r\n\r\n  // Use refs to avoid dependency issues in useEffects related to intervals and component mount status\r\n  const intervalRef = useRef(null);\r\n  const mountedRef = useRef(true);\r\n  const initialFetchDone = useRef(false);\r\n\r\n  // Memoize static values to prevent unnecessary re-renders\r\n  const colors = useMemo(() => ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'], []);\r\n\r\n  // Function to get a valid image URL for player profiles\r\n  // Falls back to ui-avatars.com if PFP is missing or invalid\r\n  const getValidImageUrl = useCallback((pfpUrl, username) => {\r\n    // Check if pfpUrl is valid (not null, not a blob, not default placeholder)\r\n    if (!pfpUrl || pfpUrl.startsWith('blob:') || pfpUrl.includes('placehold.co')) {\r\n      const colorIndex = username ? username.charCodeAt(0) % colors.length : 0;\r\n      return `https://ui-avatars.com/api/?name=${encodeURIComponent(username || 'U')}&background=${colors[colorIndex].slice(1)}&color=fff&size=50`;\r\n    }\r\n    return pfpUrl;\r\n  }, [colors]);\r\n\r\n  // Process and deduplicate leaderboard data\r\n  // Sorts by score (desc) then timestamp (desc) to handle ties, and removes duplicates by username\r\n  const processLeaderboardData = useCallback((data) => {\r\n    if (!Array.isArray(data) || data.length === 0) return [];\r\n\r\n    const uniqueDataMap = new Map(); // Map to store unique users by username, keeping the highest score/latest entry\r\n\r\n    // Sort data first to ensure the highest score/latest entry for a user is processed last (and thus kept)\r\n    const sorted = [...data].sort((a, b) => {\r\n      // Primary sort: score descending\r\n      if (b.score !== a.score) return b.score - a.score;\r\n      // Secondary sort: timestamp descending (more recent entry wins ties)\r\n      return new Date(b.timestamp) - new Date(a.timestamp);\r\n    });\r\n\r\n    // Deduplicate: Iterate through sorted data and add to map.\r\n    // Because it's sorted, the last entry for a username will be the best/most recent.\r\n    sorted.forEach(player => {\r\n      // Ensure player.username exists to avoid issues with undefined keys\r\n      if (player.username) {\r\n        uniqueDataMap.set(player.username, player);\r\n      }\r\n    });\r\n\r\n    return Array.from(uniqueDataMap.values());\r\n  }, []);\r\n\r\n  // Function to fetch leaderboard data from the backend API\r\n  const fetchLeaderboard = useCallback(async (isBackgroundRefresh = false) => {\r\n    // Only proceed if the component is still mounted\r\n    if (!mountedRef.current) return;\r\n\r\n    try {\r\n      if (!isBackgroundRefresh && !hasInitiallyLoaded) {\r\n        setIsLoading(true); // Show full loading spinner on initial load\r\n      } else if (isBackgroundRefresh) {\r\n        setIsRefreshing(true); // Show refreshing indicator for background updates\r\n      }\r\n\r\n      setError(null); // Clear any previous errors\r\n\r\n      // Define your backend API endpoint for leaderboard data\r\n      // Use environment variable for API base URL (e.g., REACT_APP_API_BASE_URL)\r\n      // For Canvas environment, you might need to adjust this to a mock API or a specific endpoint\r\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n      const endpoint = `${API_BASE_URL}/api/scores/leaderboard`; // Assuming this endpoint exists on your backend\r\n\r\n      console.log(`Fetching leaderboard from: ${endpoint}`);\r\n      const res = await fetch(endpoint);\r\n\r\n      if (!res.ok) {\r\n        // If response is not OK (e.g., 404, 500), throw an error\r\n        throw new Error(`HTTP error! status: ${res.status}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      console.log('📊 Leaderboard data received:', data);\r\n\r\n      // Only update state if component is still mounted\r\n      if (!mountedRef.current) return;\r\n\r\n      const processedData = processLeaderboardData(data);\r\n      setSortedData(processedData);\r\n      setLastUpdated(new Date()); // Record the time of the last successful update\r\n\r\n      if (!hasInitiallyLoaded) {\r\n        setHasInitiallyLoaded(true); // Mark that initial data has been loaded\r\n        initialFetchDone.current = true; // Mark initial fetch as complete\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Error fetching leaderboard:', err);\r\n      // Only update state if component is still mounted\r\n      if (!mountedRef.current) return;\r\n\r\n      setError(err.message); // Set the error message\r\n\r\n      // If there's an error on initial load and fallback data is provided, use it\r\n      if (!hasInitiallyLoaded && leaderboardData && leaderboardData.length > 0) {\r\n        console.log('📋 Using fallback data from props:', leaderboardData);\r\n        const processedData = processLeaderboardData(leaderboardData);\r\n        setSortedData(processedData);\r\n        setLastUpdated(new Date());\r\n        setHasInitiallyLoaded(true);\r\n        initialFetchDone.current = true;\r\n      }\r\n    } finally {\r\n      // Always stop loading/refreshing indicators\r\n      if (mountedRef.current) {\r\n        setIsLoading(false);\r\n        setIsRefreshing(false);\r\n      }\r\n    }\r\n  }, [processLeaderboardData, leaderboardData, hasInitiallyLoaded]); // Dependencies for useCallback\r\n\r\n  // Effect for initial data fetch and setting up auto-refresh\r\n  useEffect(() => {\r\n    // If the leaderboard is not visible, don't fetch or refresh in the background\r\n    if (!isVisible) {\r\n      // Clear any existing interval if component becomes invisible\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Clear any existing interval before setting a new one\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    // Only do initial fetch if we haven't loaded before or if data is empty\r\n    // This prevents re-fetching immediately if component re-renders but is already loaded\r\n    if (!initialFetchDone.current || sortedData.length === 0) {\r\n      fetchLeaderboard(false); // Perform initial fetch (not background refresh)\r\n    }\r\n\r\n    // Setup auto-refresh every 60 seconds (60000 ms)\r\n    intervalRef.current = setInterval(() => {\r\n      // Only refresh if component is mounted and currently visible\r\n      if (mountedRef.current && isVisible) {\r\n        fetchLeaderboard(true); // Perform a background refresh\r\n      }\r\n    }, 60000);\r\n\r\n    // Cleanup function: clear interval when component unmounts or isVisible changes to false\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [isVisible, fetchLeaderboard, sortedData.length]); // Dependencies for this useEffect\r\n\r\n  // Effect to handle cleanup on component unmount\r\n  useEffect(() => {\r\n    mountedRef.current = true; // Set to true on mount\r\n    return () => {\r\n      mountedRef.current = false; // Set to false on unmount\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Memoize filtered and sorted data to prevent unnecessary recalculations on re-renders\r\n  const filteredAndSortedData = useMemo(() => {\r\n    let filtered = [...sortedData];\r\n\r\n    switch (filterBy) {\r\n      case 'team':\r\n        // Filter by the current user's team if a team is selected\r\n        filtered = filtered.filter(entry =>\r\n          currentUser?.team && entry.team && entry.team.name === currentUser.team.name\r\n        );\r\n        break;\r\n      case 'completed':\r\n        // Filter for players who completed the game (reached max score)\r\n        // Assuming 'completed' means reaching the final prize tier (e.g., 1,000,000 $PROVE)\r\n        filtered = filtered.filter(entry => entry.completed && entry.score >= 1000000);\r\n        break;\r\n      default:\r\n        // 'all' filter, no additional filtering needed\r\n        break;\r\n    }\r\n\r\n    // Final sort by score descending, then by question number (for ties)\r\n    filtered.sort((a, b) => {\r\n      if (b.score !== a.score) {\r\n        return b.score - a.score;\r\n      }\r\n      // If scores are equal, sort by questionNumber (higher question number means they progressed further)\r\n      return (b.questionNumber || 0) - (a.questionNumber || 0);\r\n    });\r\n\r\n    return filtered;\r\n  }, [sortedData, filterBy, currentUser]); // Dependencies for this useMemo\r\n\r\n  // Memoize current user's data and rank within the filtered list\r\n  const currentUserData = useMemo(() => {\r\n    const currentUserEntry = filteredAndSortedData.find(entry =>\r\n      entry.username === currentUser?.username\r\n    );\r\n    const currentUserRank = currentUserEntry ?\r\n      filteredAndSortedData.findIndex(entry => entry.username === currentUser?.username) + 1 : null;\r\n\r\n    return { currentUserEntry, currentUserRank };\r\n  }, [filteredAndSortedData, currentUser?.username]);\r\n\r\n  // Memoize team statistics to prevent recalculation\r\n  const teamStats = useMemo(() => {\r\n    const stats = {};\r\n    sortedData.forEach(entry => {\r\n      if (entry.team && entry.team.name) { // Ensure team and team name exist\r\n        const teamName = entry.team.name;\r\n        if (!stats[teamName]) {\r\n          stats[teamName] = {\r\n            name: teamName,\r\n            color: entry.team.color,\r\n            totalScore: 0,\r\n            playerCount: 0,\r\n            avgScore: 0,\r\n            topScore: 0\r\n          };\r\n        }\r\n        stats[teamName].totalScore += entry.score || 0;\r\n        stats[teamName].playerCount += 1;\r\n        stats[teamName].topScore = Math.max(stats[teamName].topScore, entry.score || 0);\r\n      }\r\n    });\r\n\r\n    // Calculate average score and sort teams by total score\r\n    Object.values(stats).forEach(team => {\r\n      team.avgScore = team.playerCount > 0 ? Math.round(team.totalScore / team.playerCount) : 0;\r\n    });\r\n\r\n    return Object.values(stats).sort((a, b) => b.totalScore - a.totalScore);\r\n  }, [sortedData]);\r\n\r\n  // Helper function to get styling for different ranks (Top 3, Others)\r\n  const getRankStyling = useCallback((index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return {\r\n          icon: '👑',\r\n          class: 'rank-first',\r\n          gradient: 'linear-gradient(135deg, #FFD700, #FFA500)', // Gold\r\n          glow: '#FFD700'\r\n        };\r\n      case 1:\r\n        return {\r\n          icon: '🥈',\r\n          class: 'rank-second',\r\n          gradient: 'linear-gradient(135deg, #C0C0C0, #A0A0A0)', // Silver\r\n          glow: '#C0C0C0'\r\n        };\r\n      case 2:\r\n        return {\r\n          icon: '🥉',\r\n          class: 'rank-third',\r\n          gradient: 'linear-gradient(135deg, #CD7F32, #B87333)', // Bronze\r\n          glow: '#CD7F32'\r\n        };\r\n      default:\r\n        return {\r\n          icon: `#${index + 1}`,\r\n          class: 'rank-other',\r\n          gradient: 'linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.01))', // Subtle gradient for others\r\n          glow: 'rgba(97, 195, 255, 0.2)' // Blueish glow\r\n        };\r\n    }\r\n  }, []);\r\n\r\n  // Helper function to get status badge for player entries\r\n  const getStatusBadge = useCallback((entry) => {\r\n    // Check for Provernaire status first (completed game with max score)\r\n    if (entry.completed && entry.score >= 1000000) {\r\n      return { text: 'PROVERNAIRE', class: 'status-provernaire', icon: '💎' };\r\n    } else if (entry.failed) {\r\n      return { text: 'ELIMINATED', class: 'status-failed', icon: '💥' };\r\n    } else if (entry.walkedAway) {\r\n      return { text: 'WALKED AWAY', class: 'status-walked', icon: '🚶' };\r\n    } else if (entry.timeUp) {\r\n      return { text: 'TIME UP', class: 'status-timeout', icon: '⏰' };\r\n    } else if (entry.gameStatus === 'in_progress') {\r\n      return { text: 'IN PROGRESS', class: 'status-progress', icon: '🎮' };\r\n    } else {\r\n      // Default or unknown status\r\n      return { text: 'PLAYED', class: 'status-played', icon: '✅' };\r\n    }\r\n  }, []);\r\n\r\n\r\n  // Memoize last updated text for display\r\n  const lastUpdatedText = useMemo(() => {\r\n    if (!lastUpdated) return '';\r\n\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now - lastUpdated) / 1000);\r\n\r\n    if (diffInSeconds < 60) {\r\n      return `Updated ${diffInSeconds} seconds ago`;\r\n    } else {\r\n      const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n      return `Updated ${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;\r\n    }\r\n  }, [lastUpdated]);\r\n\r\n  // Loading state - ONLY show on very first load if no data is present\r\n  if (isLoading && !hasInitiallyLoaded) {\r\n    return (\r\n      <div className=\"leaderboard-screen\">\r\n        <div className=\"background-animation\">\r\n          <div className=\"floating-shapes\">\r\n            {[...Array(20)].map((_, i) => (\r\n              <div key={i} className={`shape shape-${i % 4}`}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"loading-content\">\r\n          <div className=\"loading-spinner\">🎮</div>\r\n          <div className=\"loading-text\">Loading leaderboard...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state - only show if we have an error AND no data AND haven't loaded successfully before\r\n  if (error && sortedData.length === 0 && !hasInitiallyLoaded) {\r\n    return (\r\n      <div className=\"leaderboard-screen\">\r\n        <div className=\"background-animation\">\r\n          <div className=\"floating-shapes\">\r\n            {[...Array(15)].map((_, i) => (\r\n              <div key={i} className={`shape shape-${i % 3}`}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">❌</div>\r\n          <h3>Failed to load leaderboard</h3>\r\n          <p>{error}</p>\r\n          <button onClick={() => fetchLeaderboard(false)}>Retry</button>\r\n          {onBackToGame && (\r\n            <button onClick={onBackToGame} style={{ marginLeft: '10px' }}>\r\n              Back to Game\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"leaderboard-screen\">\r\n      {/* Background Animation */}\r\n      <div className=\"background-animation\">\r\n        <div className=\"floating-shapes\">\r\n          {[...Array(20)].map((_, i) => (\r\n            <div key={i} className={`shape shape-${i % 4}`}></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Header */}\r\n      <div className=\"leaderboard-header\">\r\n        <button\r\n          className=\"back-button\"\r\n          onClick={onBackToGame} // Use onBackToGame directly\r\n          type=\"button\"\r\n        >\r\n          <span className=\"back-icon\">←</span>\r\n          <span className=\"back-text\">Back to Game</span>\r\n        </button>\r\n\r\n        <div className=\"header-title\">\r\n          <h1 className=\"leaderboard-title\">🏆 LEADERBOARD</h1>\r\n          <p className=\"leaderboard-subtitle\">Who Wants to Be a Provernaire</p>\r\n          {currentUser && (\r\n            <p className=\"current-user\">Playing as: @{currentUser.username}</p>\r\n          )}\r\n\r\n          <div className=\"refresh-info\">\r\n            {isRefreshing && (\r\n              <span className=\"refresh-indicator\">\r\n                🔄 Updating...\r\n              </span>\r\n            )}\r\n            {lastUpdated && !isRefreshing && (\r\n              <span className=\"last-updated\">\r\n                {lastUpdatedText}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"header-stats\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-value\">{sortedData.length}</span>\r\n            <span className=\"stat-label\">Total Players</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-value\">\r\n              {sortedData.filter(e => e.completed && e.score >= 1000000).length}\r\n            </span>\r\n            <span className=\"stat-label\">PROVERNAIRES</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* User Performance Card */}\r\n      {currentUserData.currentUserEntry && (\r\n        <div className=\"user-performance-card\">\r\n          <div className=\"performance-header\">\r\n            <h3>Your Performance</h3>\r\n            <div className=\"user-rank\">\r\n              Rank #{currentUserData.currentUserRank}\r\n            </div>\r\n          </div>\r\n          <div className=\"performance-content\">\r\n            <img\r\n              src={getValidImageUrl(currentUserData.currentUserEntry.pfpUrl, currentUserData.currentUserEntry.username)}\r\n              alt=\"Your profile\"\r\n              className=\"performance-pfp\"\r\n              onError={(e) => {\r\n                e.target.src = getValidImageUrl(null, currentUserData.currentUserEntry.username);\r\n              }}\r\n            />\r\n            <div className=\"performance-details\">\r\n              <div className=\"performance-score\">\r\n                {(currentUserData.currentUserEntry.score || 0).toLocaleString()} $PROVE\r\n              </div>\r\n              <div className=\"performance-info\">\r\n                <span\r\n                  className=\"performance-team\"\r\n                  style={{ color: currentUserData.currentUserEntry.team?.color }}\r\n                >\r\n                  {currentUserData.currentUserEntry.team?.name || 'No Team'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"performance-status\">\r\n              {(() => {\r\n                const status = getStatusBadge(currentUserData.currentUserEntry);\r\n                return (\r\n                  <span className={`status-badge ${status.class}`}>\r\n                    {status.icon} {status.text}\r\n                  </span>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"leaderboard-filters\">\r\n        <button\r\n          className={`filter-button ${filterBy === 'all' ? 'active' : ''}`}\r\n          onClick={() => setFilterBy('all')}\r\n          type=\"button\"\r\n        >\r\n          🌍 All Players ({sortedData.length})\r\n        </button>\r\n        <button\r\n          className={`filter-button ${filterBy === 'team' ? 'active' : ''}`}\r\n          onClick={() => setFilterBy('team')}\r\n          type=\"button\"\r\n          disabled={!currentUser?.team}\r\n        >\r\n          👥 My Team ({sortedData.filter(p => p.team && currentUser?.team && p.team.name === currentUser.team.name).length})\r\n        </button>\r\n        <button\r\n          className={`filter-button ${filterBy === 'completed' ? 'active' : ''}`}\r\n          onClick={() => setFilterBy('completed')}\r\n          type=\"button\"\r\n        >\r\n          💎 PROVERNAIRES ({sortedData.filter(p => p.completed && p.score >= 1000000).length})\r\n        </button>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"leaderboard-content\">\r\n        {/* Top 3 Podium */}\r\n        {filteredAndSortedData.length >= 3 && (\r\n          <div className=\"podium-section\">\r\n            <h3 className=\"section-title\">🥇 Hall of Fame</h3>\r\n            <div className=\"podium\">\r\n              {/* Second Place */}\r\n              {filteredAndSortedData[1] && (\r\n                <div className=\"podium-position second\">\r\n                  <div className=\"podium-player\">\r\n                    <img\r\n                      src={getValidImageUrl(filteredAndSortedData[1].pfpUrl, filteredAndSortedData[1].username)}\r\n                      alt={filteredAndSortedData[1].username}\r\n                      className=\"podium-pfp\"\r\n                      onError={(e) => {\r\n                        e.target.src = getValidImageUrl(null, filteredAndSortedData[1].username);\r\n                      }}\r\n                    />\r\n                    <div className=\"podium-info\">\r\n                      <div className=\"podium-username\">@{filteredAndSortedData[1].username}</div>\r\n                      <div className=\"podium-score\">\r\n                        {(filteredAndSortedData[1].score || 0).toLocaleString()} $PROVE\r\n                      </div>\r\n                      <div\r\n                        className=\"podium-team\"\r\n                        style={{ backgroundColor: filteredAndSortedData[1].team?.color }}\r\n                      >\r\n                        {filteredAndSortedData[1].team?.name || 'No Team'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"podium-rank\">🥈</div>\r\n                  <div className=\"podium-height second-height\"></div>\r\n                </div>\r\n              )}\r\n\r\n              {/* First Place */}\r\n              <div className=\"podium-position first\">\r\n                <div className=\"crown-animation\">👑</div>\r\n                <div className=\"podium-player\">\r\n                  <img\r\n                    src={getValidImageUrl(filteredAndSortedData[0].pfpUrl, filteredAndSortedData[0].username)}\r\n                    alt={filteredAndSortedData[0].username}\r\n                    className=\"podium-pfp\"\r\n                    onError={(e) => {\r\n                      e.target.src = getValidImageUrl(null, filteredAndSortedData[0].username);\r\n                    }}\r\n                  />\r\n                  <div className=\"podium-info\">\r\n                    <div className=\"podium-username\">@{filteredAndSortedData[0].username}</div>\r\n                    <div className=\"podium-score\">\r\n                      {(filteredAndSortedData[0].score || 0).toLocaleString()} $PROVE\r\n                    </div>\r\n                    <div\r\n                      className=\"podium-team\"\r\n                      style={{ backgroundColor: filteredAndSortedData[0].team?.color }}\r\n                    >\r\n                      {filteredAndSortedData[0].team?.name || 'No Team'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"podium-rank\">🥇</div>\r\n                <div className=\"podium-height first-height\"></div>\r\n              </div>\r\n\r\n              {/* Third Place */}\r\n              {filteredAndSortedData[2] && (\r\n                <div className=\"podium-position third\">\r\n                  <div className=\"podium-player\">\r\n                    <img\r\n                      src={getValidImageUrl(filteredAndSortedData[2].pfpUrl, filteredAndSortedData[2].username)}\r\n                      alt={filteredAndSortedData[2].username}\r\n                      className=\"podium-pfp\"\r\n                      onError={(e) => {\r\n                        e.target.src = getValidImageUrl(null, filteredAndSortedData[2].username);\r\n                      }}\r\n                    />\r\n                    <div className=\"podium-info\">\r\n                      <div className=\"podium-username\">@{filteredAndSortedData[2].username}</div>\r\n                      <div className=\"podium-score\">\r\n                        {(filteredAndSortedData[2].score || 0).toLocaleString()} $PROVE\r\n                      </div>\r\n                      <div\r\n                        className=\"podium-team\"\r\n                        style={{ backgroundColor: filteredAndSortedData[2].team?.color }}\r\n                      >\r\n                        {filteredAndSortedData[2].team?.name || 'No Team'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"podium-rank\">🥉</div>\r\n                  <div className=\"podium-height third-height\"></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Full Rankings List */}\r\n        <div className=\"rankings-section\">\r\n          <h3 className=\"section-title\">📊 Full Rankings</h3>\r\n          <div className=\"rankings-list\">\r\n            {filteredAndSortedData.length === 0 ? (\r\n              <div className=\"empty-state\">\r\n                <div className=\"empty-icon\">🎮</div>\r\n                <div className=\"empty-title\">\r\n                  {sortedData.length === 0\r\n                    ? \"No players have joined yet!\"\r\n                    : \"No players in this category!\"}\r\n                </div>\r\n                <div className=\"empty-subtitle\">\r\n                  {sortedData.length === 0\r\n                    ? \"Be the first to play and claim the top spot\"\r\n                    : \"Switch to 'All Players' to see everyone.\"}\r\n                </div>\r\n                {error && (\r\n                  <p className=\"error-hint\">\r\n                    Connection error: {error}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              filteredAndSortedData.map((entry, index) => {\r\n                const rankStyle = getRankStyling(index);\r\n                const status = getStatusBadge(entry);\r\n                const isCurrentUser = entry.username === currentUser?.username;\r\n\r\n                return (\r\n                  <div\r\n                    key={`${entry._id || entry.username}-${entry.score}-${index}`} // Unique key\r\n                    className={`ranking-item ${rankStyle.class} ${isCurrentUser ? 'current-user' : ''}`}\r\n                    style={{\r\n                      // Apply gradient background only for top 3, others use default item background\r\n                      background: index < 3 ? rankStyle.gradient : 'rgba(255, 255, 255, 0.05)',\r\n                      boxShadow: `0 4px 20px ${rankStyle.glow}33`\r\n                    }}\r\n                  >\r\n                    <div className=\"ranking-rank\">\r\n                      {rankStyle.icon}\r\n                    </div>\r\n\r\n                    <img\r\n                      src={getValidImageUrl(entry.pfpUrl, entry.username)} // Use pfpUrl from entry\r\n                      alt={entry.username}\r\n                      className=\"ranking-pfp\"\r\n                      onError={(e) => {\r\n                        e.target.src = getValidImageUrl(null, entry.username);\r\n                      }}\r\n                    />\r\n\r\n                    <div className=\"ranking-info\">\r\n                      <div className=\"ranking-username\">\r\n                        @{entry.username}\r\n                        {isCurrentUser && <span className=\"you-badge\">YOU</span>}\r\n                      </div>\r\n                      <div className=\"ranking-details\">\r\n                        <span\r\n                          className=\"ranking-team\"\r\n                          style={{ color: entry.team?.color }}\r\n                        >\r\n                          {entry.team?.name || 'No Team'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"ranking-score\">\r\n                      <div className=\"score-amount\">\r\n                        {(entry.score || 0).toLocaleString()}\r\n                      </div>\r\n                      <div className=\"score-currency\">$PROVE</div>\r\n                    </div>\r\n\r\n                    <div className=\"ranking-status\">\r\n                      <span className={`status-badge ${status.class}`}>\r\n                        {status.icon} {status.text}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Team Statistics */}\r\n        {teamStats.length > 0 && (\r\n          <div className=\"team-stats-section\">\r\n            <h3 className=\"section-title\">Team Performance</h3>\r\n            <div className=\"team-stats-grid\">\r\n              {teamStats.map((team, index) => (\r\n                <div\r\n                  key={team.name}\r\n                  className=\"team-stat-card\"\r\n                  style={{\r\n                    borderColor: team.color,\r\n                    boxShadow: `0 4px 20px ${team.color}33`\r\n                  }}\r\n                >\r\n                  <div className=\"team-stat-header\">\r\n                    <div\r\n                      className=\"team-stat-color\"\r\n                      style={{ backgroundColor: team.color }}\r\n                    ></div>\r\n                    <h4 className=\"team-stat-name\">{team.name}</h4>\r\n                    <div className=\"team-stat-rank\">#{index + 1}</div>\r\n                  </div>\r\n                  <div className=\"team-stat-metrics\">\r\n                    <div className=\"team-metric\">\r\n                      <span className=\"metric-value\">{team.totalScore.toLocaleString()}</span>\r\n                      <span className=\"metric-label\">Total Score</span>\r\n                    </div>\r\n                    <div className=\"team-metric\">\r\n                      <span className=\"metric-value\">{team.avgScore.toLocaleString()}</span>\r\n                      <span className=\"metric-label\">Avg Score</span>\r\n                    </div>\r\n                    <div className=\"team-metric\">\r\n                      <span className=\"metric-value\">{team.playerCount}</span>\r\n                      <span className=\"metric-label\">Players</span>\r\n                    </div>\r\n                    <div className=\"team-metric\">\r\n                      <span className=\"metric-value\">{team.topScore.toLocaleString()}</span>\r\n                      <span className=\"metric-label\">Best Score</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Stats Footer */}\r\n      <div className=\"stats-footer\">\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-number\">{sortedData.length}</span>\r\n          <span className=\"stat-label\">Total Players</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-number\">{sortedData.filter(p => p.completed && p.score >= 1000000).length}</span>\r\n          <span className=\"stat-label\">PROVERNAIRES</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-number\">\r\n            {sortedData.length > 0 ? Math.max(...sortedData.map(p => p.score || 0)).toLocaleString() : '0'}\r\n          </span>\r\n          <span className=\"stat-label\">Highest Score</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LeaderboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}