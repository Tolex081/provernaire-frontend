{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HELLO\\\\Desktop\\\\provernaire-game\\\\frontend\\\\src\\\\pages\\\\ResultPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ResultPage.jsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './ResultPage.css'; // Ensure this CSS file exists and is styled\nimport Modal from '../components/Modal/Modal'; // Import the Modal component\n\n/**\r\n * ResultPage Component\r\n * Displays the outcome of the game (win/lose/walk away/time up), final score,\r\n * and provides options to play again, view leaderboard, or stake tokens.\r\n *\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team: { name, color } }.\r\n * @param {Object} gameResult - Object containing the game's final score and reason { score, reason, timestamp }.\r\n * @param {function} onPlayAgain - Callback to restart the game (go back to preview).\r\n * @param {function} onNavigateToLeaderboard - Callback to navigate to the leaderboard.\r\n * @param {function} onNavigateToStake - NEW: Callback to navigate to the staking page.\r\n * @param {function} onScoreUpdate - Callback to ensure final score is sent to backend.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = ({\n  currentUser,\n  gameResult,\n  onPlayAgain,\n  onNavigateToLeaderboard,\n  onNavigateToStake,\n  // NEW: Destructure the new prop\n  onScoreUpdate\n}) => {\n  _s();\n  var _currentUser$team, _currentUser$team2;\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const [hasFinalScoreBeenUpdated, setHasFinalScoreBeenUpdated] = useState(false);\n\n  // Determine game outcome message and styling\n  const getOutcomeDetails = useCallback(() => {\n    var _gameResult$score;\n    switch (gameResult === null || gameResult === void 0 ? void 0 : gameResult.reason) {\n      case 'win':\n        return {\n          title: '🎉 Congratulations, Provernaire!',\n          message: `You answered all 10 questions and won ${gameResult.score.toLocaleString()} $PROVE!`,\n          class: 'result-win',\n          icon: '�',\n          animationClass: 'win-animation'\n        };\n      case 'lose':\n        return {\n          title: 'Game Over!',\n          message: `You answered incorrectly. Your secured prize was ${gameResult.score.toLocaleString()} $PROVE.`,\n          class: 'result-lose',\n          icon: '❌',\n          animationClass: 'lose-animation'\n        };\n      case 'walk_away':\n        return {\n          title: 'Smart Move!',\n          message: `You walked away with a secured prize of ${gameResult.score.toLocaleString()} $PROVE.`,\n          class: 'result-walk-away',\n          icon: '🚶',\n          animationClass: 'walk-away-animation'\n        };\n      case 'time_up':\n        return {\n          title: 'Time Ran Out!',\n          message: `You ran out of time. Your secured prize was ${gameResult.score.toLocaleString()} $PROVE.`,\n          class: 'result-time-up',\n          icon: '⏰',\n          animationClass: 'time-up-animation'\n        };\n      default:\n        return {\n          title: 'Game Ended',\n          message: `Your final score is ${(gameResult === null || gameResult === void 0 ? void 0 : (_gameResult$score = gameResult.score) === null || _gameResult$score === void 0 ? void 0 : _gameResult$score.toLocaleString()) || 0} $PROVE.`,\n          class: 'result-default',\n          icon: '🎮',\n          animationClass: ''\n        };\n    }\n  }, [gameResult]);\n  const outcome = getOutcomeDetails();\n\n  // Ensure the final score is updated on the backend when ResultPage loads\n  useEffect(() => {\n    if (currentUser !== null && currentUser !== void 0 && currentUser.id && gameResult && !hasFinalScoreBeenUpdated) {\n      console.log('ResultPage: Sending final game result to backend...');\n      // The GamePage already sends updates, but this ensures the final status is recorded\n      // if the page is refreshed or navigated to directly.\n      onScoreUpdate({\n        userId: currentUser.id,\n        username: currentUser.username,\n        pfpUrl: currentUser.pfpUrl,\n        team: currentUser.team,\n        score: gameResult.score,\n        questionNumber: gameResult.reason === 'win' ? 10 : gameResult.reason === 'walk_away' ? gameResult.questionNumber : gameResult.reason === 'lose' || gameResult.reason === 'time_up' ? gameResult.questionNumber : 0,\n        completed: gameResult.reason === 'win',\n        failed: gameResult.reason === 'lose',\n        walkedAway: gameResult.reason === 'walk_away',\n        timeUp: gameResult.reason === 'time_up',\n        gameStatus: gameResult.reason === 'win' ? 'finished' : gameResult.reason === 'walk_away' ? 'walked_away' : 'game_over'\n      });\n      setHasFinalScoreBeenUpdated(true);\n    }\n  }, [currentUser, gameResult, onScoreUpdate, hasFinalScoreBeenUpdated]);\n\n  // Fallback if gameResult is not available\n  if (!gameResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"result-title\",\n          children: \"No Game Result Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-message\",\n          children: \"Please play a game first to see your results.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"result-button primary-button\",\n          onClick: onPlayAgain,\n          children: \"Play Now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `result-page-container ${outcome.class}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `animated-background ${outcome.animationClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-shapes\",\n        children: [...Array(20)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `shape shape-${i % 4}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `result-card ${outcome.class}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-icon\",\n          children: outcome.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"result-title\",\n          children: outcome.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-message\",\n          children: outcome.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.pfpUrl) || 'https://placehold.co/80x80/cccccc/000000?text=PFP',\n            alt: \"User Profile\",\n            className: \"user-pfp\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://placehold.co/80x80/cccccc/000000?text=PFP';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: [\"@\", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'Guest']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"team-name\",\n              style: {\n                color: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$team = currentUser.team) === null || _currentUser$team === void 0 ? void 0 : _currentUser$team.color\n              },\n              children: (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$team2 = currentUser.team) === null || _currentUser$team2 === void 0 ? void 0 : _currentUser$team2.name) || 'No Team'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"result-button primary-button\",\n            onClick: onPlayAgain,\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"result-button secondary-button\",\n            onClick: onNavigateToLeaderboard,\n            children: \"View Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), gameResult.score > 0 && onNavigateToStake && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"result-button stake-button\",\n            onClick: onNavigateToStake,\n            children: [\"Stake Your \", gameResult.score.toLocaleString(), \" $PROVE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), gameResult.score > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staking-reminder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Don't forget to stake your $PROVE tokens!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPage, \"4P8TkEZwRom6ZnZk7XE9lNQpBs8=\");\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","jsxDEV","_jsxDEV","ResultPage","currentUser","gameResult","onPlayAgain","onNavigateToLeaderboard","onNavigateToStake","onScoreUpdate","_s","_currentUser$team","_currentUser$team2","showModal","setShowModal","modalMessage","setModalMessage","hasFinalScoreBeenUpdated","setHasFinalScoreBeenUpdated","getOutcomeDetails","_gameResult$score","reason","title","message","score","toLocaleString","class","icon","animationClass","outcome","id","console","log","userId","username","pfpUrl","team","questionNumber","completed","failed","walkedAway","timeUp","gameStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","map","_","i","src","alt","onError","e","target","onerror","style","color","name","show","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HELLO/Desktop/provernaire-game/frontend/src/pages/ResultPage.jsx"],"sourcesContent":["// frontend/src/pages/ResultPage.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport './ResultPage.css'; // Ensure this CSS file exists and is styled\r\nimport Modal from '../components/Modal/Modal'; // Import the Modal component\r\n\r\n/**\r\n * ResultPage Component\r\n * Displays the outcome of the game (win/lose/walk away/time up), final score,\r\n * and provides options to play again, view leaderboard, or stake tokens.\r\n *\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team: { name, color } }.\r\n * @param {Object} gameResult - Object containing the game's final score and reason { score, reason, timestamp }.\r\n * @param {function} onPlayAgain - Callback to restart the game (go back to preview).\r\n * @param {function} onNavigateToLeaderboard - Callback to navigate to the leaderboard.\r\n * @param {function} onNavigateToStake - NEW: Callback to navigate to the staking page.\r\n * @param {function} onScoreUpdate - Callback to ensure final score is sent to backend.\r\n */\r\nconst ResultPage = ({\r\n  currentUser,\r\n  gameResult,\r\n  onPlayAgain,\r\n  onNavigateToLeaderboard,\r\n  onNavigateToStake, // NEW: Destructure the new prop\r\n  onScoreUpdate,\r\n}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [hasFinalScoreBeenUpdated, setHasFinalScoreBeenUpdated] = useState(false);\r\n\r\n  // Determine game outcome message and styling\r\n  const getOutcomeDetails = useCallback(() => {\r\n    switch (gameResult?.reason) {\r\n      case 'win':\r\n        return {\r\n          title: '🎉 Congratulations, Provernaire!',\r\n          message: `You answered all 10 questions and won ${gameResult.score.toLocaleString()} $PROVE!`,\r\n          class: 'result-win',\r\n          icon: '�',\r\n          animationClass: 'win-animation'\r\n        };\r\n      case 'lose':\r\n        return {\r\n          title: 'Game Over!',\r\n          message: `You answered incorrectly. Your secured prize was ${gameResult.score.toLocaleString()} $PROVE.`,\r\n          class: 'result-lose',\r\n          icon: '❌',\r\n          animationClass: 'lose-animation'\r\n        };\r\n      case 'walk_away':\r\n        return {\r\n          title: 'Smart Move!',\r\n          message: `You walked away with a secured prize of ${gameResult.score.toLocaleString()} $PROVE.`,\r\n          class: 'result-walk-away',\r\n          icon: '🚶',\r\n          animationClass: 'walk-away-animation'\r\n        };\r\n      case 'time_up':\r\n        return {\r\n          title: 'Time Ran Out!',\r\n          message: `You ran out of time. Your secured prize was ${gameResult.score.toLocaleString()} $PROVE.`,\r\n          class: 'result-time-up',\r\n          icon: '⏰',\r\n          animationClass: 'time-up-animation'\r\n        };\r\n      default:\r\n        return {\r\n          title: 'Game Ended',\r\n          message: `Your final score is ${gameResult?.score?.toLocaleString() || 0} $PROVE.`,\r\n          class: 'result-default',\r\n          icon: '🎮',\r\n          animationClass: ''\r\n        };\r\n    }\r\n  }, [gameResult]);\r\n\r\n  const outcome = getOutcomeDetails();\r\n\r\n  // Ensure the final score is updated on the backend when ResultPage loads\r\n  useEffect(() => {\r\n    if (currentUser?.id && gameResult && !hasFinalScoreBeenUpdated) {\r\n      console.log('ResultPage: Sending final game result to backend...');\r\n      // The GamePage already sends updates, but this ensures the final status is recorded\r\n      // if the page is refreshed or navigated to directly.\r\n      onScoreUpdate({\r\n        userId: currentUser.id,\r\n        username: currentUser.username,\r\n        pfpUrl: currentUser.pfpUrl,\r\n        team: currentUser.team,\r\n        score: gameResult.score,\r\n        questionNumber: gameResult.reason === 'win' ? 10 : (gameResult.reason === 'walk_away' ? gameResult.questionNumber : (gameResult.reason === 'lose' || gameResult.reason === 'time_up' ? gameResult.questionNumber : 0)),\r\n        completed: gameResult.reason === 'win',\r\n        failed: gameResult.reason === 'lose',\r\n        walkedAway: gameResult.reason === 'walk_away',\r\n        timeUp: gameResult.reason === 'time_up',\r\n        gameStatus: gameResult.reason === 'win' ? 'finished' : (gameResult.reason === 'walk_away' ? 'walked_away' : 'game_over')\r\n      });\r\n      setHasFinalScoreBeenUpdated(true);\r\n    }\r\n  }, [currentUser, gameResult, onScoreUpdate, hasFinalScoreBeenUpdated]);\r\n\r\n\r\n  // Fallback if gameResult is not available\r\n  if (!gameResult) {\r\n    return (\r\n      <div className=\"result-page-container\">\r\n        <div className=\"result-card\">\r\n          <h2 className=\"result-title\">No Game Result Found</h2>\r\n          <p className=\"result-message\">Please play a game first to see your results.</p>\r\n          <button className=\"result-button primary-button\" onClick={onPlayAgain}>\r\n            Play Now!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`result-page-container ${outcome.class}`}>\r\n      {/* Background Animation - can be dynamic based on outcome */}\r\n      <div className={`animated-background ${outcome.animationClass}`}>\r\n        <div className=\"floating-shapes\">\r\n          {[...Array(20)].map((_, i) => (\r\n            <div key={i} className={`shape shape-${i % 4}`}></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"result-content-wrapper\">\r\n        <div className={`result-card ${outcome.class}`}>\r\n          <div className=\"result-icon\">{outcome.icon}</div>\r\n          <h2 className=\"result-title\">{outcome.title}</h2>\r\n          <p className=\"result-message\">{outcome.message}</p>\r\n\r\n          <div className=\"user-summary\">\r\n            <img\r\n              src={currentUser?.pfpUrl || 'https://placehold.co/80x80/cccccc/000000?text=PFP'}\r\n              alt=\"User Profile\"\r\n              className=\"user-pfp\"\r\n              onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/80x80/cccccc/000000?text=PFP'; }}\r\n            />\r\n            <div className=\"user-details\">\r\n              <span className=\"username\">@{currentUser?.username || 'Guest'}</span>\r\n              <span className=\"team-name\" style={{ color: currentUser?.team?.color }}>\r\n                {currentUser?.team?.name || 'No Team'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-buttons\">\r\n            <button className=\"result-button primary-button\" onClick={onPlayAgain}>\r\n              Play Again\r\n            </button>\r\n            <button className=\"result-button secondary-button\" onClick={onNavigateToLeaderboard}>\r\n              View Leaderboard\r\n            </button>\r\n            {/* NEW: Stake Tokens Button */}\r\n            {gameResult.score > 0 && onNavigateToStake && (\r\n              <button className=\"result-button stake-button\" onClick={onNavigateToStake}>\r\n                Stake Your {gameResult.score.toLocaleString()} $PROVE\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Staking Reminder (optional, can be removed if stake button is prominent) */}\r\n          {gameResult.score > 0 && (\r\n            <div className=\"staking-reminder\">\r\n              <p>Don't forget to stake your $PROVE tokens!</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal show={showModal} onClose={() => setShowModal(false)} message={modalMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}