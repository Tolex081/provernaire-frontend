{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HELLO\\\\Desktop\\\\provernaire-game\\\\frontend\\\\src\\\\pages\\\\ResultPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ResultPage.jsx\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport html2canvas from 'html22canvas'; // Note: This should be 'html2canvas' in a real project\nimport './ResultPage.css'; // Import the CSS for this page\n\n/**\r\n * ResultPage Component\r\n * Displays the final results of a game, including score and game status.\r\n * Provides options to play again, navigate to the leaderboard, and download/share results.\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team: { name, color } }.\r\n * @param {Object} gameResult - Object containing the game's outcome { score, reason, timestamp }.\r\n * @param {function} onPlayAgain - Callback to restart the game (navigate to preview).\r\n * @param {function} onNavigateToLeaderboard - Callback to navigate to the leaderboard.\r\n * @param {function} onScoreUpdate - Callback to update score on the backend.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = ({\n  currentUser,\n  gameResult,\n  onPlayAgain,\n  onNavigateToLeaderboard,\n  onScoreUpdate\n}) => {\n  _s();\n  var _currentUser$team, _currentUser$team2;\n  const resultCardRef = useRef(null);\n  const [scoreSubmitted, setScoreSubmitted] = useState(false);\n\n  // Default values if props are not fully provided\n  const finalScore = (gameResult === null || gameResult === void 0 ? void 0 : gameResult.score) || 0;\n  const gameReason = (gameResult === null || gameResult === void 0 ? void 0 : gameResult.reason) || 'unknown';\n  const username = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'Player';\n  const pfpUrl = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.pfpUrl) || 'https://placehold.co/80x80/cccccc/000000?text=PFP';\n  const teamName = (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$team = currentUser.team) === null || _currentUser$team === void 0 ? void 0 : _currentUser$team.name) || 'Unknown Team';\n  const teamColor = (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$team2 = currentUser.team) === null || _currentUser$team2 === void 0 ? void 0 : _currentUser$team2.color) || '#6A0DAD';\n\n  // Memoized callback to submit the final score to the backend\n  const submitFinalScore = useCallback(() => {\n    // Only submit if onScoreUpdate is provided and score hasn't been submitted yet\n    if (onScoreUpdate && finalScore !== null && !scoreSubmitted) {\n      // Determine question number based on finalScore, assuming prize structure from GamePage\n      // This is a simplified calculation; a more robust solution might pass the actual questionNumber from GamePage\n      let questionNumberAchieved = 0;\n      if (finalScore >= 1000) {\n        // Assuming 1000 is the first prize tier\n        const prizeStructure = [1000, 2500, 5000, 10000, 25000, 50000, 100000, 250000, 500000, 1000000];\n        questionNumberAchieved = prizeStructure.indexOf(finalScore) + 1;\n      }\n      onScoreUpdate({\n        userId: currentUser.id,\n        // Use userId for backend identification\n        username: username,\n        pfpUrl: pfpUrl,\n        team: currentUser.team,\n        // Pass the full team object\n        score: finalScore,\n        questionNumber: questionNumberAchieved,\n        completed: gameReason === 'win',\n        failed: gameReason === 'lose' || gameReason === 'time_up',\n        walkedAway: gameReason === 'walk_away',\n        timeUp: gameReason === 'time_up',\n        gameStatus: gameReason // Pass the reason as gameStatus\n      });\n      setScoreSubmitted(true); // Mark score as submitted\n    }\n  }, [onScoreUpdate, finalScore, scoreSubmitted, currentUser, username, pfpUrl, gameReason]);\n\n  // Effect to submit score when component mounts and score is available\n  useEffect(() => {\n    submitFinalScore();\n  }, [submitFinalScore]); // Depend on submitFinalScore memoized callback\n\n  // Function to download the result card as an image\n  const downloadResult = async () => {\n    if (resultCardRef.current) {\n      try {\n        // Add clean-export class to hide elements not desired in the screenshot\n        resultCardRef.current.classList.add('clean-export');\n        const canvas = await html2canvas(resultCardRef.current, {\n          backgroundColor: null,\n          // Transparent background\n          scale: 2,\n          // Higher scale for better quality\n          useCORS: true // Enable cross-origin images if any\n          // Specify width/height if you want a fixed size for the screenshot,\n          // otherwise, html2canvas will use the element's rendered size.\n          // width: 600, // Example fixed width\n          // height: 800, // Example fixed height\n        });\n\n        // Remove the class after rendering to restore original display\n        resultCardRef.current.classList.remove('clean-export');\n        const link = document.createElement('a');\n        link.download = `succinct-trivia-${username.replace(/[^a-zA-Z0-9]/g, '')}-${finalScore}prove.png`;\n        link.href = canvas.toDataURL('image/png'); // Get data URL as PNG\n        link.click(); // Trigger download\n      } catch (error) {\n        console.error('❌ Error generating image:', error);\n        // Optionally show a modal message to the user\n      }\n    }\n  };\n\n  // Function to share result to X (Twitter)\n  const shareToX = () => {\n    const text = `Just won ${finalScore.toLocaleString()} $PROVE tokens playing Succinct Labs Trivia! 🎯🚀 Think you can beat my score? My team: ${teamName}!`;\n    const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;\n    window.open(url, '_blank', 'noopener,noreferrer'); // Open in new tab, secure\n  };\n\n  // Determine the message and emoji based on the final score\n  const getResultMessage = useCallback(() => {\n    if (finalScore === 0) {\n      return {\n        title: \"Better Luck Next Time!\",\n        message: \"Don't worry, every expert was once a beginner. Study up on Succinct Labs and try again!\",\n        emoji: \"😅\"\n      };\n    } else if (finalScore < 10000) {\n      return {\n        title: \"Great Start!\",\n        message: \"You're on your way to becoming a Succinct Labs expert!\",\n        emoji: \"🎯\"\n      };\n    } else if (finalScore < 50000) {\n      return {\n        title: \"Impressive Knowledge!\",\n        message: \"You really know your stuff about Succinct Labs!\",\n        emoji: \"🔥\"\n      };\n    } else if (finalScore < 100000) {\n      return {\n        title: \"Succinct Master!\",\n        message: \"Outstanding! You're a true Succinct Labs expert!\",\n        emoji: \"⭐\"\n      };\n    } else {\n      // finalScore >= 100000\n      return {\n        title: \"PERFECT GAME!\",\n        message: \"Incredible! You've mastered everything about Succinct Labs!\",\n        emoji: \"🏆\"\n      };\n    }\n  }, [finalScore]); // Recalculate only if finalScore changes\n\n  const resultDisplay = getResultMessage(); // Get the result message and emoji\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-animation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-shapes celebration\",\n        children: [...Array(30)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `shape shape-${i % 6} celebration-shape`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confetti\",\n        children: [...Array(50)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `confetti-piece confetti-${i % 4}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: resultCardRef,\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"succinct-logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-text\",\n              children: \"Who Wants To Be A Provernaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-subtitle\",\n              children: \"Trivia Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pfpUrl,\n              alt: \"Profile\",\n              className: \"user-pfp-large\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = 'https://placehold.co/80x80/cccccc/000000?text=PFP';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"username-large\",\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-badge-large\",\n                style: {\n                  backgroundColor: teamColor\n                },\n                children: teamName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-emoji\",\n              children: resultDisplay.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"final-score\",\n              children: finalScore.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prove-token\",\n              children: \"$PROVE TOKENS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"result-title\",\n              children: resultDisplay.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"result-text\",\n              children: resultDisplay.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), finalScore > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"staking-reminder\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reminder-icon\",\n              children: \"\\uD83D\\uDC8E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reminder-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Don't forget to stake your $PROVE tokens!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), \"Maximize your rewards in the Succinct ecosystem\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"succinct-branding\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Powered by Succinct Labs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"team-colors\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"color-dot\",\n                  style: {\n                    backgroundColor: '#B753FF'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"color-dot\",\n                  style: {\n                    backgroundColor: '#FF955E'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"color-dot\",\n                  style: {\n                    backgroundColor: '#B0FF6F'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"color-dot\",\n                  style: {\n                    backgroundColor: '#61C3FF'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"color-dot\",\n                  style: {\n                    backgroundColor: '#FF54D7'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"primary-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-button\",\n            onClick: downloadResult,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Download Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"share-x-button\",\n            onClick: shareToX,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Share on X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"secondary-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"play-again-button\",\n            onClick: onPlayAgain,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"leaderboard-button\",\n            onClick: onNavigateToLeaderboard,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Leaderboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), finalScore > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staking-action\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"stake-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stake Your $PROVE Tokens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPage, \"b2E5MPOuZuTyL0OsjFdbPjB7uSs=\");\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","html2canvas","jsxDEV","_jsxDEV","ResultPage","currentUser","gameResult","onPlayAgain","onNavigateToLeaderboard","onScoreUpdate","_s","_currentUser$team","_currentUser$team2","resultCardRef","scoreSubmitted","setScoreSubmitted","finalScore","score","gameReason","reason","username","pfpUrl","teamName","team","name","teamColor","color","submitFinalScore","questionNumberAchieved","prizeStructure","indexOf","userId","id","questionNumber","completed","failed","walkedAway","timeUp","gameStatus","downloadResult","current","classList","add","canvas","backgroundColor","scale","useCORS","remove","link","document","createElement","download","replace","href","toDataURL","click","error","console","shareToX","text","toLocaleString","url","encodeURIComponent","window","open","getResultMessage","title","message","emoji","resultDisplay","className","children","Array","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","onError","e","target","onerror","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HELLO/Desktop/provernaire-game/frontend/src/pages/ResultPage.jsx"],"sourcesContent":["// frontend/src/pages/ResultPage.jsx\r\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport html2canvas from 'html22canvas'; // Note: This should be 'html2canvas' in a real project\r\nimport './ResultPage.css'; // Import the CSS for this page\r\n\r\n/**\r\n * ResultPage Component\r\n * Displays the final results of a game, including score and game status.\r\n * Provides options to play again, navigate to the leaderboard, and download/share results.\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team: { name, color } }.\r\n * @param {Object} gameResult - Object containing the game's outcome { score, reason, timestamp }.\r\n * @param {function} onPlayAgain - Callback to restart the game (navigate to preview).\r\n * @param {function} onNavigateToLeaderboard - Callback to navigate to the leaderboard.\r\n * @param {function} onScoreUpdate - Callback to update score on the backend.\r\n */\r\nconst ResultPage = ({ currentUser, gameResult, onPlayAgain, onNavigateToLeaderboard, onScoreUpdate }) => {\r\n  const resultCardRef = useRef(null);\r\n  const [scoreSubmitted, setScoreSubmitted] = useState(false);\r\n\r\n  // Default values if props are not fully provided\r\n  const finalScore = gameResult?.score || 0;\r\n  const gameReason = gameResult?.reason || 'unknown';\r\n  const username = currentUser?.username || 'Player';\r\n  const pfpUrl = currentUser?.pfpUrl || 'https://placehold.co/80x80/cccccc/000000?text=PFP';\r\n  const teamName = currentUser?.team?.name || 'Unknown Team';\r\n  const teamColor = currentUser?.team?.color || '#6A0DAD';\r\n\r\n  // Memoized callback to submit the final score to the backend\r\n  const submitFinalScore = useCallback(() => {\r\n    // Only submit if onScoreUpdate is provided and score hasn't been submitted yet\r\n    if (onScoreUpdate && finalScore !== null && !scoreSubmitted) {\r\n      // Determine question number based on finalScore, assuming prize structure from GamePage\r\n      // This is a simplified calculation; a more robust solution might pass the actual questionNumber from GamePage\r\n      let questionNumberAchieved = 0;\r\n      if (finalScore >= 1000) { // Assuming 1000 is the first prize tier\r\n        const prizeStructure = [1000, 2500, 5000, 10000, 25000, 50000, 100000, 250000, 500000, 1000000];\r\n        questionNumberAchieved = prizeStructure.indexOf(finalScore) + 1;\r\n      }\r\n\r\n      onScoreUpdate({\r\n        userId: currentUser.id, // Use userId for backend identification\r\n        username: username,\r\n        pfpUrl: pfpUrl,\r\n        team: currentUser.team, // Pass the full team object\r\n        score: finalScore,\r\n        questionNumber: questionNumberAchieved,\r\n        completed: gameReason === 'win',\r\n        failed: gameReason === 'lose' || gameReason === 'time_up',\r\n        walkedAway: gameReason === 'walk_away',\r\n        timeUp: gameReason === 'time_up',\r\n        gameStatus: gameReason // Pass the reason as gameStatus\r\n      });\r\n      setScoreSubmitted(true); // Mark score as submitted\r\n    }\r\n  }, [onScoreUpdate, finalScore, scoreSubmitted, currentUser, username, pfpUrl, gameReason]);\r\n\r\n  // Effect to submit score when component mounts and score is available\r\n  useEffect(() => {\r\n    submitFinalScore();\r\n  }, [submitFinalScore]); // Depend on submitFinalScore memoized callback\r\n\r\n  // Function to download the result card as an image\r\n  const downloadResult = async () => {\r\n    if (resultCardRef.current) {\r\n      try {\r\n        // Add clean-export class to hide elements not desired in the screenshot\r\n        resultCardRef.current.classList.add('clean-export');\r\n\r\n        const canvas = await html2canvas(resultCardRef.current, {\r\n          backgroundColor: null, // Transparent background\r\n          scale: 2, // Higher scale for better quality\r\n          useCORS: true, // Enable cross-origin images if any\r\n          // Specify width/height if you want a fixed size for the screenshot,\r\n          // otherwise, html2canvas will use the element's rendered size.\r\n          // width: 600, // Example fixed width\r\n          // height: 800, // Example fixed height\r\n        });\r\n\r\n        // Remove the class after rendering to restore original display\r\n        resultCardRef.current.classList.remove('clean-export');\r\n\r\n        const link = document.createElement('a');\r\n        link.download = `succinct-trivia-${username.replace(/[^a-zA-Z0-9]/g, '')}-${finalScore}prove.png`;\r\n        link.href = canvas.toDataURL('image/png'); // Get data URL as PNG\r\n        link.click(); // Trigger download\r\n      } catch (error) {\r\n        console.error('❌ Error generating image:', error);\r\n        // Optionally show a modal message to the user\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to share result to X (Twitter)\r\n  const shareToX = () => {\r\n    const text = `Just won ${finalScore.toLocaleString()} $PROVE tokens playing Succinct Labs Trivia! 🎯🚀 Think you can beat my score? My team: ${teamName}!`;\r\n    const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;\r\n    window.open(url, '_blank', 'noopener,noreferrer'); // Open in new tab, secure\r\n  };\r\n\r\n  // Determine the message and emoji based on the final score\r\n  const getResultMessage = useCallback(() => {\r\n    if (finalScore === 0) {\r\n      return {\r\n        title: \"Better Luck Next Time!\",\r\n        message: \"Don't worry, every expert was once a beginner. Study up on Succinct Labs and try again!\",\r\n        emoji: \"😅\"\r\n      };\r\n    } else if (finalScore < 10000) {\r\n      return {\r\n        title: \"Great Start!\",\r\n        message: \"You're on your way to becoming a Succinct Labs expert!\",\r\n        emoji: \"🎯\"\r\n      };\r\n    } else if (finalScore < 50000) {\r\n      return {\r\n        title: \"Impressive Knowledge!\",\r\n        message: \"You really know your stuff about Succinct Labs!\",\r\n        emoji: \"🔥\"\r\n      };\r\n    } else if (finalScore < 100000) {\r\n      return {\r\n        title: \"Succinct Master!\",\r\n        message: \"Outstanding! You're a true Succinct Labs expert!\",\r\n        emoji: \"⭐\"\r\n      };\r\n    } else { // finalScore >= 100000\r\n      return {\r\n        title: \"PERFECT GAME!\",\r\n        message: \"Incredible! You've mastered everything about Succinct Labs!\",\r\n        emoji: \"🏆\"\r\n      };\r\n    }\r\n  }, [finalScore]); // Recalculate only if finalScore changes\r\n\r\n  const resultDisplay = getResultMessage(); // Get the result message and emoji\r\n\r\n  return (\r\n    <div className=\"result-page-container\">\r\n      {/* 3D Background Animation */}\r\n      <div className=\"background-animation\">\r\n        <div className=\"floating-shapes celebration\">\r\n          {[...Array(30)].map((_, i) => (\r\n            <div key={i} className={`shape shape-${i % 6} celebration-shape`}></div>\r\n          ))}\r\n        </div>\r\n        <div className=\"confetti\">\r\n          {[...Array(50)].map((_, i) => (\r\n            <div key={i} className={`confetti-piece confetti-${i % 4}`}></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"result-content-wrapper\">\r\n        <div ref={resultCardRef} className=\"result-card\">\r\n          <div className=\"result-card-header\">\r\n            <div className=\"succinct-logo\">\r\n              <span className=\"logo-text\">Who Wants To Be A Provernaire</span>\r\n              <span className=\"logo-subtitle\">Trivia Challenge</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"result-card-content\">\r\n            <div className=\"user-info-large\">\r\n              <img\r\n                src={pfpUrl}\r\n                alt=\"Profile\"\r\n                className=\"user-pfp-large\"\r\n                onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/80x80/cccccc/000000?text=PFP'; }}\r\n              />\r\n              <div className=\"user-details\">\r\n                <h2 className=\"username-large\">{username}</h2>\r\n                <div\r\n                  className=\"team-badge-large\"\r\n                  style={{ backgroundColor: teamColor }}\r\n                >\r\n                  {teamName}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score-display\">\r\n              <div className=\"result-emoji\">{resultDisplay.emoji}</div>\r\n              <h1 className=\"final-score\">{finalScore.toLocaleString()}</h1>\r\n              <div className=\"prove-token\">$PROVE TOKENS</div>\r\n            </div>\r\n\r\n            <div className=\"result-message\">\r\n              <h3 className=\"result-title\">{resultDisplay.title}</h3>\r\n              <p className=\"result-text\">{resultDisplay.message}</p>\r\n            </div>\r\n\r\n            {finalScore > 0 && (\r\n              <div className=\"staking-reminder\">\r\n                <div className=\"reminder-icon\">💎</div>\r\n                <div className=\"reminder-text\">\r\n                  <strong>Don't forget to stake your $PROVE tokens!</strong>\r\n                  <br />\r\n                  Maximize your rewards in the Succinct ecosystem\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"card-footer\">\r\n              <div className=\"succinct-branding\">\r\n                <span>Powered by Succinct Labs</span>\r\n                <div className=\"team-colors\">\r\n                  <div className=\"color-dot\" style={{ backgroundColor: '#B753FF' }}></div>\r\n                  <div className=\"color-dot\" style={{ backgroundColor: '#FF955E' }}></div>\r\n                  <div className=\"color-dot\" style={{ backgroundColor: '#B0FF6F' }}></div>\r\n                  <div className=\"color-dot\" style={{ backgroundColor: '#61C3FF' }}></div>\r\n                  <div className=\"color-dot\" style={{ backgroundColor: '#FF54D7' }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"result-actions\">\r\n          <div className=\"primary-actions\">\r\n            <button className=\"download-button\" onClick={downloadResult}>\r\n              <span>Download Result</span>\r\n            </button>\r\n            <button className=\"share-x-button\" onClick={shareToX}>\r\n              <span>Share on X</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"secondary-actions\">\r\n            <button className=\"play-again-button\" onClick={onPlayAgain}>\r\n              <span>Play Again</span>\r\n            </button>\r\n\r\n            <button className=\"leaderboard-button\" onClick={onNavigateToLeaderboard}>\r\n              <span>Leaderboard</span>\r\n            </button>\r\n          </div>\r\n\r\n          {finalScore > 0 && (\r\n            <div className=\"staking-action\">\r\n              <button className=\"stake-button\">\r\n                <span>Stake Your $PROVE Tokens</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}