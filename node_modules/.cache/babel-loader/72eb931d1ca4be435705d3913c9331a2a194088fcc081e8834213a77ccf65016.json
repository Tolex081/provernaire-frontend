{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HELLO\\\\Desktop\\\\provernaire-game\\\\frontend\\\\src\\\\components\\\\Modal\\\\Modal.jsx\";\n// frontend/src/components/Modal/Modal.jsx\nimport React from 'react';\nimport './Modal.css'; // Import the CSS for the Modal\n\n/**\r\n * Modal Component\r\n * A reusable modal dialog for displaying messages (e.g., alerts, confirmations).\r\n * @param {boolean} show - Controls the visibility of the modal.\r\n * @param {string} message - The message to display inside the modal.\r\n * @param {function} onClose - Callback function to close the modal.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  show,\n  message,\n  onClose\n}) => {\n  if (!show) {\n    return null; // Don't render if not visible\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"modal-close-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","show","message","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HELLO/Desktop/provernaire-game/frontend/src/components/Modal/Modal.jsx"],"sourcesContent":["// frontend/src/components/Modal/Modal.jsx\r\nimport React from 'react';\r\nimport './Modal.css'; // Import the CSS for the Modal\r\n\r\n/**\r\n * Modal Component\r\n * A reusable modal dialog for displaying messages (e.g., alerts, confirmations).\r\n * @param {boolean} show - Controls the visibility of the modal.\r\n * @param {string} message - The message to display inside the modal.\r\n * @param {function} onClose - Callback function to close the modal.\r\n */\r\nconst Modal = ({ show, message, onClose }) => {\r\n  if (!show) {\r\n    return null; // Don't render if not visible\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <p className=\"modal-message\">{message}</p>\r\n        <button onClick={onClose} className=\"modal-close-button\">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa,CAAC,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAC5C,IAAI,CAACF,IAAI,EAAE;IACT,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEF,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BN,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BN,OAAA;QAAGK,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CV,OAAA;QAAQW,OAAO,EAAEP,OAAQ;QAACC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAfIX,KAAK;AAiBX,eAAeA,KAAK;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}