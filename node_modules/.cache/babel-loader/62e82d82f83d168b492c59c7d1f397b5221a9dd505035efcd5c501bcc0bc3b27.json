{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HELLO\\\\Desktop\\\\provernaire-game\\\\frontend\\\\src\\\\pages\\\\TeamSelectionPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/TeamSelectionPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport './TeamSelectionPage.css'; // Import the CSS for this page\nimport Modal from '../components/Modal/Modal'; // Import the custom Modal component\nimport { selectUserTeam } from '../api/api'; // Import the API function for team selection\nimport TeamLeader1 from '../assets/Yinger2.png'; // Import team leader images\n\n// Mock team data (In a real application, this might come from the backend)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_TEAMS = [{\n  name: 'Yinger',\n  color: '#FF54D7',\n  leaderImage: '../assets/Yinger2.png',\n  leaderName: 'Captain Yinger'\n}, {\n  name: 'Addy',\n  color: '##61C3FF',\n  leaderImage: 'https://placehold.co/100x100/33FF57/ffffff?text=B',\n  leaderName: 'Captain Addy'\n}, {\n  name: 'zkDan',\n  color: '#B753FF',\n  leaderImage: 'https://placehold.co/100x100/3357FF/ffffff?text=G',\n  leaderName: 'Captain zkDan'\n}, {\n  name: 'Fakedev9999',\n  color: '#B0FF6F',\n  leaderImage: 'https://placehold.co/100x100/FF33A1/ffffff?text=D',\n  leaderName: 'Captain Fakedev9999'\n}, {\n  name: 'Lsquared²',\n  color: '#FF955E',\n  leaderImage: 'https://placehold.co/100x100/FF33A1/ffffff?text=D',\n  leaderName: 'Captain Lsquared²'\n}];\n\n/**\r\n * TeamSelectionPage Component\r\n * Allows users to select a team or re-select their previously chosen team.\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team }.\r\n * @param {function} onTeamSelected - Callback function to execute after a team is successfully selected.\r\n */\nconst TeamSelectionPage = ({\n  currentUser,\n  onTeamSelected\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const [selectedTeam, setSelectedTeam] = useState((currentUser === null || currentUser === void 0 ? void 0 : currentUser.team) || null); // Initialize with user's existing team\n\n  // Effect to update selectedTeam if currentUser changes (e.g., after initial login)\n  useEffect(() => {\n    if (currentUser && currentUser.team) {\n      setSelectedTeam(currentUser.team);\n    }\n  }, [currentUser]);\n\n  /**\r\n   * Handles the team selection logic.\r\n   * Validates if a username exists and enforces re-selection of the same team if already chosen.\r\n   * Calls the backend API to save the selected team.\r\n   * @param {Object} team - The selected team object.\r\n   */\n  const handleTeamSelect = async team => {\n    if (!currentUser || !currentUser.username) {\n      setModalMessage('User not logged in. Please go back to the login screen.');\n      setShowModal(true);\n      return;\n    }\n\n    // Logic: If user has a team and tries to select a different one, prevent it.\n    if (selectedTeam && selectedTeam.name !== team.name) {\n      setModalMessage(`You have already selected the ${selectedTeam.name} team. Please re-select that team to continue.`);\n      setShowModal(true);\n      return;\n    }\n    try {\n      setIsLoading(true);\n      // Call the backend API to save the user's team\n      const response = await selectUserTeam(currentUser.id, team.name); // Pass user ID and team name\n\n      if (response.success) {\n        setModalMessage(`Successfully selected the ${team.name} team!`);\n        setShowModal(true);\n        setSelectedTeam(team); // Update local state with the newly selected team\n        onTeamSelected({\n          ...currentUser,\n          team: team\n        }); // Update parent state with the new team\n      } else {\n        setModalMessage(response.message || 'Failed to select team. Please try again.');\n        setShowModal(true);\n      }\n    } catch (error) {\n      console.error('Error selecting team:', error);\n      setModalMessage('An error occurred while saving your team selection. Please try again.');\n      setShowModal(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-selection-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-selection-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"team-selection-title\",\n        children: \"Choose Your Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), currentUser && currentUser.team && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-team-message\",\n        children: [\"You are currently on the \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight-team-name\",\n          children: currentUser.team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 38\n        }, this), \" team. Please re-select it to proceed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Processing team selection...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teams-grid\",\n        children: MOCK_TEAMS.map((team, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `team-button ${(selectedTeam === null || selectedTeam === void 0 ? void 0 : selectedTeam.name) === team.name ? 'current-selected-team' : ''}`,\n          style: {\n            '--team-color': team.color\n          } /* Use CSS variable for background */,\n          onClick: () => handleTeamSelect(team),\n          disabled: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-leader-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: team.leaderImage,\n              alt: `${team.leaderName || team.name} leader`,\n              className: \"leader-pfp\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = `https://placehold.co/100x100/${team.color.substring(1)}/ffffff?text=${team.name.charAt(0)}`;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"team-name\",\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), team.leaderName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"leader-name\",\n              children: team.leaderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), (selectedTeam === null || selectedTeam === void 0 ? void 0 : selectedTeam.name) === team.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-indicator\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamSelectionPage, \"qqx4Ha320dIqGbUZF6z4DeiVgto=\");\n_c = TeamSelectionPage;\nexport default TeamSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"TeamSelectionPage\");","map":{"version":3,"names":["React","useState","useEffect","Modal","selectUserTeam","TeamLeader1","jsxDEV","_jsxDEV","MOCK_TEAMS","name","color","leaderImage","leaderName","TeamSelectionPage","currentUser","onTeamSelected","_s","isLoading","setIsLoading","showModal","setShowModal","modalMessage","setModalMessage","selectedTeam","setSelectedTeam","team","handleTeamSelect","username","response","id","success","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","onClick","disabled","src","alt","onError","e","target","onerror","substring","charAt","show","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HELLO/Desktop/provernaire-game/frontend/src/pages/TeamSelectionPage.jsx"],"sourcesContent":["// frontend/src/pages/TeamSelectionPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './TeamSelectionPage.css'; // Import the CSS for this page\r\nimport Modal from '../components/Modal/Modal'; // Import the custom Modal component\r\nimport { selectUserTeam } from '../api/api'; // Import the API function for team selection\r\nimport TeamLeader1 from '../assets/Yinger2.png'; // Import team leader images\r\n\r\n// Mock team data (In a real application, this might come from the backend)\r\nconst MOCK_TEAMS = [\r\n  { name: 'Yinger', color: '#FF54D7', leaderImage: '../assets/Yinger2.png', leaderName: 'Captain Yinger' },\r\n  { name: 'Addy', color: '##61C3FF', leaderImage: 'https://placehold.co/100x100/33FF57/ffffff?text=B', leaderName: 'Captain Addy' },\r\n  { name: 'zkDan', color: '#B753FF', leaderImage: 'https://placehold.co/100x100/3357FF/ffffff?text=G', leaderName: 'Captain zkDan' },\r\n  { name: 'Fakedev9999', color: '#B0FF6F', leaderImage: 'https://placehold.co/100x100/FF33A1/ffffff?text=D', leaderName: 'Captain Fakedev9999' },\r\n  { name: 'Lsquared²', color: '#FF955E', leaderImage: 'https://placehold.co/100x100/FF33A1/ffffff?text=D', leaderName: 'Captain Lsquared²' },\r\n];\r\n\r\n/**\r\n * TeamSelectionPage Component\r\n * Allows users to select a team or re-select their previously chosen team.\r\n * @param {Object} currentUser - The current logged-in user object { id, username, pfpUrl, team }.\r\n * @param {function} onTeamSelected - Callback function to execute after a team is successfully selected.\r\n */\r\nconst TeamSelectionPage = ({ currentUser, onTeamSelected }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [selectedTeam, setSelectedTeam] = useState(currentUser?.team || null); // Initialize with user's existing team\r\n\r\n  // Effect to update selectedTeam if currentUser changes (e.g., after initial login)\r\n  useEffect(() => {\r\n    if (currentUser && currentUser.team) {\r\n      setSelectedTeam(currentUser.team);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  /**\r\n   * Handles the team selection logic.\r\n   * Validates if a username exists and enforces re-selection of the same team if already chosen.\r\n   * Calls the backend API to save the selected team.\r\n   * @param {Object} team - The selected team object.\r\n   */\r\n  const handleTeamSelect = async (team) => {\r\n    if (!currentUser || !currentUser.username) {\r\n      setModalMessage('User not logged in. Please go back to the login screen.');\r\n      setShowModal(true);\r\n      return;\r\n    }\r\n\r\n    // Logic: If user has a team and tries to select a different one, prevent it.\r\n    if (selectedTeam && selectedTeam.name !== team.name) {\r\n      setModalMessage(`You have already selected the ${selectedTeam.name} team. Please re-select that team to continue.`);\r\n      setShowModal(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      // Call the backend API to save the user's team\r\n      const response = await selectUserTeam(currentUser.id, team.name); // Pass user ID and team name\r\n\r\n      if (response.success) {\r\n        setModalMessage(`Successfully selected the ${team.name} team!`);\r\n        setShowModal(true);\r\n        setSelectedTeam(team); // Update local state with the newly selected team\r\n        onTeamSelected({ ...currentUser, team: team }); // Update parent state with the new team\r\n      } else {\r\n        setModalMessage(response.message || 'Failed to select team. Please try again.');\r\n        setShowModal(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error selecting team:', error);\r\n      setModalMessage('An error occurred while saving your team selection. Please try again.');\r\n      setShowModal(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-selection-page-container\">\r\n      <div className=\"team-selection-content\">\r\n        <h2 className=\"team-selection-title\">Choose Your Team</h2>\r\n        {currentUser && currentUser.team && (\r\n          <p className=\"current-team-message\">\r\n            You are currently on the <span className=\"highlight-team-name\">{currentUser.team.name}</span> team.\r\n            Please re-select it to proceed.\r\n          </p>\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div className=\"loading-indicator\">\r\n            <p>Processing team selection...</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"teams-grid\">\r\n          {MOCK_TEAMS.map((team, index) => (\r\n            <button\r\n              key={index}\r\n              className={`team-button ${selectedTeam?.name === team.name ? 'current-selected-team' : ''}`}\r\n              style={{ '--team-color': team.color }} /* Use CSS variable for background */\r\n              onClick={() => handleTeamSelect(team)}\r\n              disabled={isLoading}\r\n            >\r\n              <div className=\"team-leader-image\">\r\n                <img\r\n                  src={team.leaderImage}\r\n                  alt={`${team.leaderName || team.name} leader`}\r\n                  className=\"leader-pfp\"\r\n                  onError={(e) => { e.target.onerror = null; e.target.src = `https://placehold.co/100x100/${team.color.substring(1)}/ffffff?text=${team.name.charAt(0)}`; }}\r\n                />\r\n              </div>\r\n              <div className=\"team-info\">\r\n                <span className=\"team-name\">{team.name}</span>\r\n                {team.leaderName && (\r\n                  <span className=\"leader-name\">{team.leaderName}</span>\r\n                )}\r\n              </div>\r\n              {selectedTeam?.name === team.name && (\r\n                <div className=\"current-indicator\">✓</div>\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Modal show={showModal} onClose={() => setShowModal(false)} message={modalMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamSelectionPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}